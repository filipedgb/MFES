class Block
/*
  Defines a piece of track.
  FEUP, MFES, 2015/16.
*/
types
	public Semaphore = <RED>|<YELLOW>|<GREEN>;
	
values
-- TODO Define values here
instance variables
	private semaphoreState1: Semaphore;
	private semaphoreState2: Semaphore;
	private currentTrain: [Train] := nil;

operations
	
	/*
	 * Block constructor.
	 *
	 * @param semaphoreStateIn1 - the state of the semaphore1
	 * @param semaphoreStateIn2 - the state of the semaphore2
	 * @param trackIn - the track this block belongs to
	 *
	 * @return Train with auto-incremental id and the moving state set to the param value
	 */
		public Block : Semaphore * Semaphore ==> Block
		Block(semaphoreStateIn1,semaphoreStateIn2) == (
			semaphoreState1 := semaphoreStateIn1;
			semaphoreState2 := semaphoreStateIn2;
			return self
		);
	
		
	/*
	 * Getter for the semaphore 1.
	 *
	 * @return train the semaphore 1
	 */
	public getSemaphore1 : () ==> Semaphore
	getSemaphore1() == return self.semaphoreState1;
		
	/*
	 * Getter for the semaphore 2.
	 *
	 * @return train the semaphore 2
	 */
	public getSemaphore2 : () ==> Semaphore
	getSemaphore2() == return self.semaphoreState2;
	
	

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Block